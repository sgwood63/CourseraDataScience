
Consider the mtcars data set. Fit a model with mpg as the outcome that includes number of cylinders as a factor variable and weight as confounder. Give the adjusted estimate for the expected change in mpg comparing 8 cylinders to 4.

-6.071

-4.256

-3.206

33.991

> fit <- lm(mpg ~ cyl + wt, data=mtcars)
> summary(fit)

Call:
lm(formula = mpg ~ cyl + wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.2893 -1.5512 -0.4684  1.5743  6.1004 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  39.6863     1.7150  23.141  < 2e-16 ***
cyl          -1.5078     0.4147  -3.636 0.001064 ** 
wt           -3.1910     0.7569  -4.216 0.000222 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.568 on 29 degrees of freedom
Multiple R-squared:  0.8302,	Adjusted R-squared:  0.8185 
F-statistic: 70.91 on 2 and 29 DF,  p-value: 6.809e-12





----------------------------------------------------

Making cylinders a factor

> mtcars$cyl <- factor(mtcars$cyl)
> fit <- lm(mpg ~ cyl + wt, data=mtcars)
> summary(fit)

Call:
lm(formula = mpg ~ cyl + wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.5890 -1.2357 -0.5159  1.3845  5.7915 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  33.9908     1.8878  18.006  < 2e-16 ***
cyl6         -4.2556     1.3861  -3.070 0.004718 ** 
cyl8         -6.0709     1.6523  -3.674 0.000999 ***
wt           -3.2056     0.7539  -4.252 0.000213 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.557 on 28 degrees of freedom
Multiple R-squared:  0.8374,	Adjusted R-squared:   0.82 
F-statistic: 48.08 on 3 and 28 DF,  p-value: 3.594e-11

8 -> 4: -6.0709


> fitNonConf <- lm(mpg ~ cyl, data=mtcars)
> summary(fitNonConf)

Call:
lm(formula = mpg ~ cyl, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-5.2636 -1.8357  0.0286  1.3893  7.2364 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  26.6636     0.9718  27.437  < 2e-16 ***
cyl6         -6.9208     1.5583  -4.441 0.000119 ***
cyl8        -11.5636     1.2986  -8.905 8.57e-10 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 3.223 on 29 degrees of freedom
Multiple R-squared:  0.7325,	Adjusted R-squared:  0.714 
F-statistic:  39.7 on 2 and 29 DF,  p-value: 4.979e-09

---------------------------------------------------

Consider the mtcars data set. Fit a model with mpg as the outcome that includes number of cylinders as a factor variable and weight as a possible confounding variable. Compare the effect of 8 versus 4 cylinders on mpg for the adjusted and unadjusted by weight models. Here, adjusted means including the weight variable as a term in the regression model and unadjusted means the model without weight included. What can be said about the effect comparing 8 and 4 cylinders after looking at models with and without weight included?.

lm(formula = mpg ~ cyl + wt, data = mtcars)
cyl8         -6.0709

lm(formula = mpg ~ cyl, data = mtcars) weight is disregarded
cyl8        -11.5636 



Holding weight constant, cylinder appears to have more of an impact on mpg than if weight is disregarded.

Within a given weight, 8 cylinder vehicles have an expected 12 mpg drop in fuel efficiency.

Including or excluding weight does not appear to change anything regarding the estimated impact of number of cylinders on mpg.

------
True: Holding weight constant, cylinder appears to have less of an impact on mpg than if weight is disregarded.

---------------------

Consider the mtcars data set. Fit a model with mpg as the outcome that considers number of cylinders as a factor variable and weight as confounder. Now fit a second model with mpg as the outcome model that considers the interaction between number of cylinders (as a factor variable) and weight. Give the P-value for the likelihood ratio test comparing the two models and suggest a model using 0.05 as a type I error rate significance benchmark.

True: The P-value is larger than 0.05. So, according to our criterion, we would fail to reject, which suggests that the interaction terms may not be necessary.

The P-value is small (less than 0.05). Thus it is surely true that there is no interaction term in the true model.

The P-value is small (less than 0.05). Thus it is surely true that there is an interaction term in the true model.

The P-value is small (less than 0.05). So, according to our criterion, we reject, which suggests that the interaction term is necessary

The P-value is larger than 0.05. So, according to our criterion, we would fail to reject, which suggests that the interaction terms is necessary.

The P-value is small (less than 0.05). So, according to our criterion, we reject, which suggests that the interaction term is not necessary.


> fit2 <- lm(mpg ~ cyl*wt, data=mtcars)
> summary(fit2)

Call:
lm(formula = mpg ~ cyl * wt, data = mtcars)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.1513 -1.3798 -0.6389  1.4938  5.2523 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   39.571      3.194  12.389 2.06e-12 ***
cyl6         -11.162      9.355  -1.193 0.243584    
cyl8         -15.703      4.839  -3.245 0.003223 ** 
wt            -5.647      1.359  -4.154 0.000313 ***
cyl6:wt        2.867      3.117   0.920 0.366199    
cyl8:wt        3.455      1.627   2.123 0.043440 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.449 on 26 degrees of freedom
Multiple R-squared:  0.8616,	Adjusted R-squared:  0.8349 
F-statistic: 32.36 on 5 and 26 DF,  p-value: 2.258e-10

> 
> gfit <- glm(mpg ~ cyl + wt, data=mtcars)
> gfit2 <- glm(mpg ~ cyl + wt + cyl*wt, data=mtcars)
> lrtest(gfit, gfit2)
Likelihood ratio test for MLE method 
Chi-squared 2 d.f. =  5.141237 , P value =  0.07648824 

> summary(fit)$adj.r.squared
[1] 0.8200146
> summary(fit2)$adj.r.squared
[1] 0.8349382
> 


> x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
> y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
> fit <- lm(y ~x)
> plot(fit)
Hit <Return> to see next plot: 
Hit <Return> to see next plot: 
Hit <Return> to see next plot: 
Hit <Return> to see next plot: 
Warning messages:
1: In sqrt(crit * p * (1 - hh)/hh) : NaNs produced
2: In sqrt(crit * p * (1 - hh)/hh) : NaNs produced
> hatvalues(fit)
        1         2         3         4         5 
0.2286650 0.2438146 0.2525027 0.2804443 0.9945734 
> 

> dfbetas(fit)
  (Intercept)             x
1  1.06212391   -0.37811633
2  0.06748037   -0.02861769
3 -0.01735756    0.00791512
4 -1.24958248    0.67253246
5  0.20432010 -133.82261293


> lm(mpg ~ I(wt * 0.5) + cyl, data = mtcars)

Call:
lm(formula = mpg ~ I(wt * 0.5) + cyl, data = mtcars)

Coefficients:
(Intercept)  I(wt * 0.5)         cyl6         cyl8  
     33.991       -6.411       -4.256       -6.071  

> 

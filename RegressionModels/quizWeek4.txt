Consider the space shuttle data ?shuttle in the MASS library. Consider modeling the use of the autolander as the outcome (variable name use). Fit a logistic regression model with autolander (variable auto) use (labeled as "auto" 1) versus not (0) as predicted by wind sign (variable wind). Give the estimated odds ratio for autolander use comparing head winds, labeled as "head" in the variable headwind (numerator) to tail winds (denominator).

-0.031

0.969

1.327

0.031


> mdl <- glm(use ~ wind, family="binomial", data = shuttle)
summary(mdl)

Call:
glm(formula = use ~ wind, family = "binomial", data = shuttle)

Deviance Residuals: 
   Min      1Q  Median      3Q     Max  
-1.073  -1.073  -1.060   1.286   1.300  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)
(Intercept) -0.25131    0.17817  -1.410    0.158
windtail    -0.03181    0.25224  -0.126    0.900

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 350.36  on 255  degrees of freedom
Residual deviance: 350.35  on 254  degrees of freedom
AIC: 354.35

Number of Fisher Scoring iterations: 4

> exp(-0.03181 )
[1] 0.9686906


> exp(coef(mdl))
(Intercept)    windtail 
  0.7777778   0.9686888 
  

Consider the previous problem. Give the estimated odds ratio for autolander use comparing head winds (numerator) to tail winds (denominator) adjusting for wind strength from the variable magn.

1.485

0.684

0.969

1.00

> mdl <- glm(use ~ wind + magn, family="binomial", data = shuttle)
> summary(mdl)

Call:
glm(formula = use ~ wind + magn, family = "binomial", data = shuttle)

Deviance Residuals: 
   Min      1Q  Median      3Q     Max  
-1.184  -1.040  -1.015   1.321   1.349  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)
(Intercept) -3.635e-01  2.841e-01  -1.280    0.201
windtail    -3.201e-02  2.530e-01  -0.127    0.899
magnMedium   2.442e-16  3.599e-01   0.000    1.000
magnOut      3.795e-01  3.568e-01   1.064    0.287
magnStrong   6.441e-02  3.590e-01   0.179    0.858

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 350.36  on 255  degrees of freedom
Residual deviance: 348.78  on 251  degrees of freedom
AIC: 358.78

Number of Fisher Scoring iterations: 4

> exp(coef(mdl))
(Intercept)    windtail  magnMedium     magnOut  magnStrong 
  0.6952323   0.9684981   1.0000000   1.4615736   1.0665323 


------------------



If you fit a logistic regression model to a binary variable, for example use of the autolander, then fit a logistic regression model for one minus the outcome (not using the autolander) what happens to the coefficients?

The coefficients change in a non-linear fashion.

The intercept changes sign, but the other coefficients don't.

Answer: The coefficients reverse their signs.

The coefficients get inverted (one over their previous value).




> shuttle$use.binary <- as.integer(shuttle$use != "auto")

> glm(use.binary ~ wind, family="binomial", data = shuttle)

Call:  glm(formula = use.binary ~ wind, family = "binomial", data = shuttle)

Coefficients:
(Intercept)     windtail  
   -0.25131     -0.03181  

Degrees of Freedom: 255 Total (i.e. Null);  254 Residual
Null Deviance:	    350.4 
Residual Deviance: 350.3 	AIC: 354.3
> shuttle$use.binary <- as.integer(shuttle$use == "auto")
> glm(use.binary ~ wind, family="binomial", data = shuttle)

Call:  glm(formula = use.binary ~ wind, family = "binomial", data = shuttle)

Coefficients:
(Intercept)     windtail  
    0.25131      0.03181  

Degrees of Freedom: 255 Total (i.e. Null);  254 Residual
Null Deviance:	    350.4 
Residual Deviance: 350.3 	AIC: 354.3

------------------


Consider the insect spray data InsectSprays. Fit a Poisson model using spray as a factor level. Report the estimated relative rate comapring spray A (numerator) to spray B (denominator).

0.9457

-0.056

0.321

0.136


> mdl <- glm(count ~ spray - 1, family="poisson", data = InsectSprays)
> coefs <- exp(coef(mdl))
> coefs
   sprayA    sprayB    sprayC    sprayD    sprayE    sprayF 
14.500000 15.333333  2.083333  4.916667  3.500000 16.666667 
> coefs['sprayA'] / coefs['sprayB']
   sprayA 
0.9456522 
> 


-----------------------

Consider a Poisson glm with an offset, t. So, for example, a model of the form
glm(count ~ x + offset(t), family = poisson) where x is a factor variable comparing a treatment (1) to a control (0) and t is the natural log of a monitoring time.

What is impact of the coefficient for x if we fit the model 
glm(count ~ x + offset(t2), family = poisson) where t2 <- log(10) + t?

In other words, what happens to the coefficients if we change the units of the offset variable. (Note, adding log(10) on the log scale is multiplying by 10 on the original scale.)


The coefficient estimate is multiplied by 10.

The coefficient estimate is divided by 10.

Not! : The coefficient is subtracted by log(10).

Try: The coefficient estimate is unchanged

x <- 1:500
t <- log(x)
t2 <- log(10) + t
y <- ppois(x, 2)
fit1 <- glm(y ~ x + offset(t), family = poisson, data = InsectSprays)

fit2 <- glm(y ~ x + offset(t2), family = poisson, data = InsectSprays)

> summary(fit1)$coef
                Estimate  Std. Error   z value     Pr(>|z|)
(Intercept) -3.965215973 0.099400570 -39.89128 0.000000e+00
x           -0.005319786 0.000353482 -15.04967 3.469836e-51


> summary(fit2)$coef
                Estimate  Std. Error   z value     Pr(>|z|)
(Intercept) -6.267801066 0.099400570 -63.05599 0.000000e+00
x           -0.005319786 0.000353482 -15.04967 3.469836e-51



> log(10)
[1] 2.302585
> summary(fit1)$coef[1]
[1] -3.965216
> summary(fit2)$coef[1]
[1] -6.267801
> summary(fit2)$coef[1] - summary(fit1)$coef[1]
[1] -2.302585


-------------------------------------

Consider the data


x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
Using a knot point at 0, fit a linear model that looks like a hockey stick with two lines meeting at x=0. Include an intercept term, x and the knot point term. What is the estimated slope of the line after 0?

-1.024

Try: 1.013

2.037

-0.183


 x <- -5:5
> y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
> 
> knots <- seq(0, 8 * pi, length = 20); 
> splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))

xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y)
lines(x, yhat, col = "red", lwd = 2)

> lm(y ~ xMat - 1)

Call:
lm(formula = y ~ xMat - 1)

Coefficients:
   xMat    xMatx     xMat  
-0.1826  -1.0242   2.0372  

Not 2.0372!!!!


